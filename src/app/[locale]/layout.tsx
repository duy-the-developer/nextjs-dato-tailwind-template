import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import '../globals.css'
import { Alert } from '@/components/Alert'
import { Footer } from '@/components/Footer'
import { locales, Locale, defaultLocale } from '@/i18n'
import { performRequest } from '@/lib/datocms'
import { draftMode } from 'next/headers'
import { Container } from '@/components/Container'
import { SITE_QUERY } from '@/lib/datocms/queries/site'
import { ComponentParser } from '@/lib/datocms/ComponentParser'
import { unstable_setRequestLocale } from 'next-intl/server'

const inter = Inter({ subsets: ['latin'] })
export const revalidate = 10

function getLayoutRequest(locale: Locale) {
  const { isEnabled } = draftMode()

  return {
    query: SITE_QUERY,
    includeDrafts: isEnabled,
    variables: { locale },
  }
}

export function generateStaticParams() {
  return process.env.ENABLE_I18N === 'true'
    ? locales.map((locale) => ({ locale }))
    : [{ locale: defaultLocale }]
}

// @todo: update metadata
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

type LocaleLayoutProps = Readonly<{
  children: React.ReactNode
  params: { locale: Locale }
}>

export default async function LocaleLayout({
  children,
  params,
}: LocaleLayoutProps) {
  const { locale } = params
  unstable_setRequestLocale(locale)
  const { isEnabled } = draftMode()
  console.log('LocaleLayout', { locale, isEnabled })

  const layoutRequest = getLayoutRequest(locale)
  const data = await performRequest(layoutRequest)

  return (
    <html lang={locale}>
      <body className={inter.className}>
        <div className="min-h-screen">
          <Alert preview={isEnabled} />
          {data?.header?.blocks.map(
            (block: any) =>
              block.id && (
                <ComponentParser
                  key={block.id}
                  data={{
                    ...block,
                    // _allSlugLocales: pageData.homePage._allSlugLocales,
                  }}
                />
              ),
          )}
          <main>
            <Container>{children}</Container>
          </main>
        </div>
        <Footer />
      </body>
    </html>
  )
}
